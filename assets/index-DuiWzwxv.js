var C=Object.defineProperty;var M=(l,t,o)=>t in l?C(l,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):l[t]=o;var n=(l,t,o)=>M(l,typeof t!="symbol"?t+"":t,o);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&e(r)}).observe(document,{childList:!0,subtree:!0});function o(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function e(s){if(s.ep)return;s.ep=!0;const i=o(s);fetch(s.href,i)}})();class w{constructor(){n(this,"distanceF",(t,o,e,s,i,r)=>Math.sqrt((s-t)**2+(i-o)**2+(r-e)**2));n(this,"numFromChar",t=>t.charCodeAt(0)-97);n(this,"mapChar",t=>String.fromCharCode(t+97));n(this,"averageZ",(t,o)=>(t+o)/2);n(this,"mapToChars",t=>t.map(o=>this.mapChar(o)));n(this,"calculateRotatedCoordinates",(t,o,e,s,i,r,a)=>{const c=Math.sin(a*s),h=Math.cos(a*s),u=-Math.sin(a*i),d=Math.cos(a*i),f=Math.sin(a*r),m=Math.cos(a*r),g=t*m*h+o*m*c*u-o*f*d+e*m*c*d+e*f*u,y=t*f*h+o*f*c*u+o*m*d+e*f*c*d-e*m*u,z=-t*c+o*h*u+e*h*d;return{x:g,y,z}})}}class b{constructor(t,o,e){n(this,"utils");n(this,"ctx");n(this,"width");n(this,"height");n(this,"centerX");n(this,"centerY");n(this,"clearCanvas",()=>{this.ctx&&(this.ctx.fillStyle="white",this.ctx.fillRect(0,0,this.width,this.height))});n(this,"drawNode",(t,o,e,s)=>{this.ctx&&(this.ctx.beginPath(),this.ctx.arc(t,o,e,0,2*Math.PI),this.ctx.strokeStyle="black",this.ctx.lineWidth=2,this.ctx.fillStyle=s,this.ctx.fill(),this.ctx.stroke())});n(this,"drawEdge",(t,o,e,s,i)=>{this.ctx&&(this.ctx.beginPath(),this.ctx.moveTo(t,o),this.ctx.lineTo(e,s),this.ctx.lineWidth=8,this.ctx.strokeStyle="black",this.ctx.stroke(),this.ctx.lineWidth=6,this.ctx.strokeStyle=i,this.ctx.lineTo(t,o),this.ctx.stroke())});n(this,"drawFace",(t,o)=>{if(this.ctx){this.ctx.beginPath(),this.ctx.strokeStyle="black",this.ctx.fillStyle=o,this.ctx.lineWidth=2,this.ctx.moveTo(t[0][0],t[0][1]);for(let e=1;e<t.length;e++)this.ctx.lineTo(t[e][0],t[e][1]);this.ctx.lineTo(t[0][0],t[0][1]),this.ctx.fill(),this.ctx.stroke()}});n(this,"drawNodes",t=>{const o=[];t.forEach((e,s)=>{if(e.z>=0){o.push(s);return}const i=this.centerX+e.x,r=this.centerY+e.y;this.drawNode(i,r,e.size,e.color)});for(let e=0;e<o.length;e++){const s=t.get(o[e]),i=this.centerX+s.x,r=this.centerY+s.y;this.drawNode(i,r,s.size,s.color)}});n(this,"drawEdges",t=>{const o=[],e=[];for(const s of t.keys()){const i=t.get(s),r=i.connections.edges;for(let a=0;a<r.length;a++){if(this.utils.numFromChar(r[a])<this.utils.numFromChar(s))continue;const c=i.x+this.centerX,h=i.y+this.centerY,u=i.z,d=t.get(r[a]).x+this.centerX,f=t.get(r[a]).y+this.centerY,m=t.get(r[a]).z,g=this.utils.averageZ(u,m);g>0?o.push([c,h,d,f]):g===0?e.push([c,h,d,f]):this.drawEdge(c,h,d,f,"#FFFFFF")}}e.push(...o);for(let s=0;s<e.length;s++){const[i,r,a,c]=e[s];this.drawEdge(i,r,a,c,"red")}});n(this,"drawFaces",t=>{const o=new Set;for(const e of t.keys()){const i=t.get(e).connections.faces;for(let r=0;r<i.length;r++){if(o.has(i[r].split("").sort().join("")))continue;const a=[];let c=0;for(const h of i[r]){const u=t.get(h).x+this.centerX,d=t.get(h).y+this.centerY;c+=t.get(h).z,a.push([u,d])}c/3>=0&&this.drawFace(a,"red"),o.add(i[r])}}});t.width=o,t.height=e,this.utils=new w,this.ctx=t.getContext("2d"),this.width=o,this.height=e,this.centerX=o/2,this.centerY=e/2}}class I{constructor(t,o){n(this,"canvasParent");n(this,"panelParent");n(this,"panelId");n(this,"canvasId");n(this,"mouseIsDown");n(this,"generateInterface",()=>{this.generateCanvas(),this.generatePanel()});n(this,"generateCanvas",()=>{this.canvasParent.innerHTML=`
      ${this.canvasParent.innerHTML}
      <canvas id="${this.canvasId}" class="border-4 border-black cursor-grab"></canvas>
    `});n(this,"generatePanel",()=>{this.panelParent.innerHTML=`
      ${this.panelParent.innerHTML}
      <form id="${this.panelId}" class="w-96">
        <div class="flex justify-between">
          <p>frequency: </p>
          <input type="range" min="1" max="50" value="1">
        </div>
        <div class="flex justify-between">
          <p>Base: </p>
          <select>
            ${["icosahedron","cube","tetrahedron"].map((t,o)=>`<option key=${o} value="${t}">${t}</option>`)}
          </select>
        </div>
        <input class="cursor-pointer" type="submit" value="Generate">
      </form>
    `});n(this,"generateEventListeners",(t,o)=>{const e=document.querySelector(`#${this.canvasId}`);document.addEventListener("mouseup",()=>{this.mouseIsDown=!1}),e.addEventListener("mousedown",()=>{this.mouseIsDown=!0}),e.addEventListener("mousemove",s=>{this.mouseIsDown&&t(s.movementX,s.movementY)}),e.addEventListener("wheel",s=>{o(s.deltaY<0)})});n(this,"getCanvasElement",()=>document.querySelector(`#${this.canvasId}`));this.canvasParent=t,this.panelParent=o,this.canvasId="geodesic-canvas",this.panelId="geodesic-panel",this.mouseIsDown=!1,this.generateInterface()}}class p{constructor(t,o,e,s={edges:[],faces:[]}){n(this,"x");n(this,"y");n(this,"z");n(this,"color");n(this,"size");n(this,"connections");this.x=t,this.y=o,this.z=e,this.color="blue",this.size=8,this.connections=s}}class v{constructor(t,o){n(this,"userInterface");n(this,"drawCanvas");n(this,"utils");n(this,"bases");n(this,"baseType");n(this,"nodes");n(this,"zoom");n(this,"zoomMin");n(this,"zoomStep");n(this,"zoomMax");n(this,"frequency");n(this,"rotationRads");n(this,"generateBases",()=>{this.bases.set("cube",this.generateCubeBase()),this.bases.set("icosahedron",this.generateIcosahedronBase())});n(this,"generateIcosahedronBase",()=>{const t=new Map,o=(1+Math.sqrt(5))/4,e=.5,s=this.utils.distanceF(0,.5,o,0,0,0),i=(r,a,c,h)=>{t.set(this.utils.mapChar(h),new p(r*this.zoom,a*this.zoom,c*this.zoom,this.getIcosahedronConnections(h)))};for(let r=0;r<=3;r++){const a=o*(2*Math.floor(r/2)-1),c=e*(2*(r%2)-1);i(0,a/s,c/s,r)}for(let r=4;r<=7;r++){const a=o*(2*Math.floor(r%4/2)-1),c=e*(2*(r%2)-1);i(a/s,c/s,0,r)}for(let r=8;r<=11;r++){const a=e*(2*(r%2)-1),c=o*(2*Math.floor(r%4/2)-1);i(a/s,0,c/s,r)}return t});n(this,"generateCubeBase",()=>{const t=new Map,o=Math.sqrt(3);for(let e=-1;e<2;e+=2)for(let s=-1;s<2;s+=2)for(let i=-1;i<2;i+=2)t.set(this.utils.mapChar(t.size),new p(e/o*this.zoom,s/o*this.zoom,i/o*this.zoom,this.getCubeConnections(t.size)));return t});n(this,"getCubeConnections",t=>({edges:this.utils.mapToChars([t^1,t^2,t^4]),faces:[]}));n(this,"getIcosahedronConnections",t=>{const o=i=>(i^1)%12,e=i=>4*((Math.floor(i/4)+1)%3)+Math.floor(i/2)%2,s=i=>4*((Math.floor(i/4)+2)%3)+2*(i%2);return this.utils.mapToChars([t,o(t),e(t)]).sort().join(""),{edges:this.utils.mapToChars([o(t),e(t),e(t)+2,s(t),s(t)+1]),faces:[[o(t),e(t)],[e(t),s(t)],[s(t),s(t)+1],[s(t)+1,e(t)+2],[e(t)+2,o(t)]].map(i=>this.utils.mapToChars([t,...i]).join(""))}});n(this,"setBase",t=>{this.baseType=t,this.generateGeo()});n(this,"generateGeo",()=>{this.frequency===1&&(this.nodes=this.bases.get(this.baseType))});n(this,"render",()=>{this.drawCanvas.clearCanvas(),this.drawCanvas.drawFaces(this.nodes)});n(this,"updateZoom",t=>{let o=0;!t&&this.zoom>this.zoomMin&&(o=this.zoom-this.zoomStep),t&&this.zoom<this.zoomMax&&(o=this.zoom+this.zoomStep);const e=this.zoom/o;this.nodes.forEach((s,i)=>{this.nodes.set(i,new p(s.x/e,s.y/e,s.z/e,s.connections))}),this.zoom=o,this.render()});n(this,"rotate",(t,o)=>{this.nodes.forEach((e,s)=>{const{x:i,y:r,z:a}=this.utils.calculateRotatedCoordinates(e.x,e.y,e.z,t,o,0,this.rotationRads);this.nodes.set(s,new p(i,r,a,e.connections))}),this.render()});this.baseType="icosahedron",this.nodes=new Map,this.zoom=300,this.zoomMin=50,this.zoomStep=20,this.zoomMax=5e3,this.bases=new Map,this.frequency=1,this.rotationRads=.008,this.utils=new w,this.userInterface=new I(t,o),this.drawCanvas=new b(this.userInterface.getCanvasElement(),800,800),this.userInterface.generateEventListeners(this.rotate,this.updateZoom),this.generateBases(),this.generateGeo(),this.render()}}const x=document.querySelector("#app");new v(x,x);
